load("@rules_ll//ll:defs.bzl", "ll_library")

filegroup(
    name = "lsan_headers",
    srcs = [
        "lsan.h",
        "lsan_allocator.h",
        "lsan_common.h",
        "lsan_flags.inc",
        "lsan_posix.h",  # Missing in CMake.
        "lsan_thread.h",
    ],
    visibility = ["//visibility:public"],
)

ll_library(
    name = "RTLSanCommon",
    srcs = [
        "lsan_common.cpp",
        "lsan_common_fuchsia.cpp",
        "lsan_common_linux.cpp",
        "lsan_common_mac.cpp",
    ],
    hdrs = [
        ":lsan_headers",
        "//compiler-rt/lib/sanitizer_common:sanitizer_impl_headers",
    ],
    compilation_mode = "bootstrap",
    relative_includes = ["compiler-rt/lib"],
    visibility = ["//visibility:public"],
)

ll_library(
    name = "clang_rt.lsan",
    srcs = [
        "lsan.cpp",
        "lsan_allocator.cpp",
        "lsan_fuchsia.cpp",
        "lsan_interceptors.cpp",
        "lsan_linux.cpp",
        "lsan_mac.cpp",
        "lsan_malloc_mac.cpp",
        "lsan_posix.cpp",
        "lsan_preinit.cpp",
        "lsan_thread.cpp",
    ],
    hdrs = [
        ":lsan_headers",
        "//compiler-rt/lib/interception:interception_headers",
        "//compiler-rt/lib/sanitizer_common:sanitizer_impl_headers",
    ],
    compilation_mode = "bootstrap",
    relative_includes = ["compiler-rt/lib"],
    visibility = ["//visibility:public"],
    deps = [
        ":RTLSanCommon",
        "//compiler-rt/lib/interception:RTInterception",
        "//compiler-rt/lib/sanitizer_common:RTSanitizerCommon",
        "//compiler-rt/lib/sanitizer_common:RTSanitizerCommonCoverage",
        "//compiler-rt/lib/sanitizer_common:RTSanitizerCommonLibc",
        "//compiler-rt/lib/sanitizer_common:RTSanitizerCommonSymbolizer",
    ],
)
