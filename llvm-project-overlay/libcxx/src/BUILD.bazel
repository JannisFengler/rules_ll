load("@rules_ll//ll:defs.bzl", "ll_bootstrap_library")

filegroup(
    name = "libcxx_src_headers",
    srcs = glob(["include/**"]),
    visibility = ["//visibility:public"],
)

ll_bootstrap_library(
    name = "src",
    srcs = [
        "algorithm.cpp",
        "any.cpp",
        "atomic.cpp",
        "barrier.cpp",
        "bind.cpp",
        "charconv.cpp",
        "chrono.cpp",
        "condition_variable.cpp",
        "condition_variable_destructor.cpp",
        "exception.cpp",
        "format.cpp",
        "functional.cpp",
        "future.cpp",
        "hash.cpp",
        "ios.cpp",
        "ios.instantiations.cpp",
        "iostream.cpp",
        "legacy_pointer_safety.cpp",
        "locale.cpp",
        "memory.cpp",
        "mutex.cpp",
        "mutex_destructor.cpp",
        "new.cpp",
        "optional.cpp",
        "random.cpp",
        "random_shuffle.cpp",
        "regex.cpp",
        "ryu/d2fixed.cpp",
        "ryu/d2s.cpp",
        "ryu/f2s.cpp",
        "shared_mutex.cpp",
        "stdexcept.cpp",
        "string.cpp",
        "strstream.cpp",
        "system_error.cpp",
        "thread.cpp",
        "typeinfo.cpp",
        "utility.cpp",
        "valarray.cpp",
        "variant.cpp",
        "vector.cpp",
    ],
    hdrs = [
        # Files in src/include.
        "include/apple_availability.h",
        "include/atomic_support.h",
        "include/config_elast.h",
        "include/refstring.h",
        "include/ryu/common.h",
        "include/ryu/d2fixed.h",
        "include/ryu/d2fixed_full_table.h",
        "include/ryu/d2s.h",
        "include/ryu/d2s_full_table.h",
        "include/ryu/d2s_intrinsics.h",
        "include/ryu/digit_table.h",
        "include/ryu/f2s.h",
        "include/ryu/ryu.h",
        "include/to_chars_floating_point.h",

        # Support ipp files.
        "support/runtime/exception_fallback.ipp",
        "support/runtime/exception_glibcxx.ipp",
        "support/runtime/exception_libcxxabi.ipp",
        "support/runtime/exception_libcxxrt.ipp",
        "support/runtime/exception_msvc.ipp",
        "support/runtime/exception_pointer_cxxabi.ipp",
        "support/runtime/exception_pointer_glibcxx.ipp",
        "support/runtime/exception_pointer_msvc.ipp",
        "support/runtime/exception_pointer_unimplemented.ipp",
        "support/runtime/new_handler_fallback.ipp",
        "support/runtime/stdexcept_default.ipp",
        "support/runtime/stdexcept_vcruntime.ipp",

        # Headers for building iostream.
        "include/sso_allocator.h",
        "iostream_init.h",
        "//libcxx:libcxx_headers",
    ],
    compile_flags = [
        "-nostdinc++",
        "-std=c++20",
        "-faligned-allocation",
        "-funwind-tables",
        "-fstrict-aliasing",
        "-fvisibility-inlines-hidden",
        "-Wno-user-defined-literals",
    ],
    defines = [
        "CHAR_BIT=8",
        "MB_LEN_MAX=1",
        "CHAR_MAX=127",
        "INT_MAX=+2147483647",
        "NDEBUG",
        "LIBCXX_BUILDING_LIBCXXABI",
        "_LIBCPP_BUILDING_LIBRARY",
        "_LIBCPP_DISABLE_NEW_DELETE_DEFINITIONS",
        "_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER",
        "_LIBCPP_LINK_PTHREAD",
        "_LIBCPP_LINK_RT_LIB",
        "__STDC_CONSTANT_MACROS",
        "__STDC_FORMAT_MACROS",
        "__STDC_LIMIT_MACROS",
    ],
    includes = ["external/llvm-project/libcxx/src"],
    visibility = ["//visibility:public"],
    deps = ["//libcxxabi:libll_cxxabi"],
)
